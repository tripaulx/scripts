#!/bin/bash
# ===================================================================
# Script de Verificação de Dependências
# Arquivo: check-dependencies.sh
# Descrição: Verifica se todas as dependências necessárias estão instaladas
# ===================================================================

# Cores para saída
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Função para verificar se um comando existe
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Função para verificar a versão do Bash
check_bash_version() {
    local required_version=4
    local current_version
    current_version=$(bash --version | head -n1 | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | cut -d. -f1)
    
    if [ "$current_version" -ge "$required_version" ]; then
        echo -e "${GREEN}✓${NC} Bash versão $current_version (mínimo: $required_version.0)"
        return 0
    else
        echo -e "${RED}✗${NC} Bash versão $current_version (necessário: $required.0+)"
        return 1
    fi
}

# Função para verificar um comando
check_command() {
    local cmd=$1
    local name=${2:-$1}
    
    if command_exists "$cmd"; then
        local version
        version=$($cmd --version 2>/dev/null | head -n1 | grep -oE '[0-9]+\.[0-9]+(\.[0-9]+)?' || echo "versão desconhecida")
        echo -e "${GREEN}✓${NC} $name encontrado ($version)"
        return 0
    else
        echo -e "${RED}✗${NC} $name não encontrado"
        return 1
    fi
}

# Função para verificar permissões de superusuário
check_sudo() {
    if [ "$(id -u)" -eq 0 ]; then
        echo -e "${YELLOW}⚠  Executando como root${NC}"
    elif command_exists sudo; then
        echo -e "${GREEN}✓${NC} sudo disponível"
    else
        echo -e "${YELLOW}⚠  sudo não encontrado (algumas verificações podem falhar)${NC}"
        return 1
    fi
}

# Função principal
main() {
    echo -e "\n${YELLOW}=== Verificando Dependências ===${NC}\n"
    
    # Verificar Bash
    echo -e "${YELLOW}Verificando Bash...${NC}"
    check_bash_version
    
    # Verificar permissões
    echo -e "\n${YELLOW}Verificando permissões...${NC}"
    check_sudo
    
    # Verificar comandos básicos
    echo -e "\n${YELLOW}Verificando comandos básicos...${NC}"
    check_command "grep" "GNU Grep"
    check_command "sed" "GNU Sed"
    check_command "awk" "AWK"
    check_command "curl" "cURL"
    check_command "jq" "jq"
    
    # Verificar módulos opcionais
    echo -e "\n${YELLOW}Verificando módulos opcionais...${NC}"
    check_command "ufw" "UFW (Firewall)" || echo -e "  ${YELLOW}Opcional: Instale com 'sudo apt install ufw'${NC}"
    check_command "fail2ban-client" "Fail2Ban" || echo -e "  ${YELLOW}Opcional: Instale com 'sudo apt install fail2ban'${NC}"
    check_command "docker" "Docker" || echo -e "  ${YELLOW}Opcional: Instale com 'curl -sSL https://get.docker.com | sh'${NC}"
    check_command "ssh" "OpenSSH Client" || echo -e "  ${YELLOW}Opcional: Instale com 'sudo apt install openssh-client'${NC}"
    
    echo -e "\n${YELLOW}=== Verificação Concluída ===${NC}\n"
}

# Executar função principal
main "$@"
